# Generated by Django 5.2.3 on 2025-06-28 08:26

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpertSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='CSS icon class', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consultation_type', models.CharField(choices=[('general', 'General Agricultural Advice'), ('crop_disease', 'Crop Disease Diagnosis'), ('soil_analysis', 'Soil Analysis & Recommendations'), ('pest_management', 'Pest Management'), ('fertilizer', 'Fertilizer Recommendations'), ('irrigation', 'Irrigation Planning'), ('crop_planning', 'Crop Planning & Selection'), ('marketing', 'Agricultural Marketing'), ('technology', 'Agricultural Technology'), ('organic_farming', 'Organic Farming'), ('other', 'Other (Specify in description)')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('preferred_mode', models.CharField(choices=[('online', 'Online (Video/Phone)'), ('in_person', 'In-Person Visit'), ('both', 'Both Online & In-Person')], max_length=20)),
                ('preferred_date', models.DateField()),
                ('preferred_time', models.TimeField()),
                ('duration_hours', models.DecimalField(decimal_places=1, default=1.0, max_digits=3)),
                ('consultation_address', models.TextField(blank=True)),
                ('consultation_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('consultation_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Expert Response'), ('accepted', 'Accepted by Expert'), ('rejected', 'Rejected by Expert'), ('completed', 'Consultation Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('expert_response', models.TextField(blank=True)),
                ('expert_responded_at', models.DateTimeField(blank=True, null=True)),
                ('scheduled_datetime', models.DateTimeField(blank=True, null=True)),
                ('meeting_link', models.URLField(blank=True, help_text='For online consultations')),
                ('actual_duration', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('payment_status', models.CharField(default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExpertProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professional_title', models.CharField(max_length=200)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('years_of_experience', models.PositiveIntegerField()),
                ('education_background', models.TextField()),
                ('professional_license', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('consultation_modes', models.CharField(choices=[('online', 'Online (Video/Phone)'), ('in_person', 'In-Person Visit'), ('both', 'Both Online & In-Person')], default='both', max_length=20)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='NPR', max_length=10)),
                ('service_areas', models.TextField(help_text='Areas where expert provides in-person services')),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('verification_documents', models.FileField(blank=True, upload_to='expert_docs/')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, upload_to='expert_photos/')),
                ('bio', models.TextField()),
                ('languages_spoken', models.CharField(help_text='Comma-separated languages', max_length=200)),
                ('is_available', models.BooleanField(default=True)),
                ('available_days', models.CharField(default='Monday,Tuesday,Wednesday,Thursday,Friday', max_length=100)),
                ('available_hours', models.CharField(default='09:00-17:00', max_length=100)),
                ('total_consultations', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('response_rate', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expert_profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_experts', to=settings.AUTH_USER_MODEL)),
                ('specializations', models.ManyToManyField(related_name='experts', to='experts.expertspecialization')),
            ],
            options={
                'ordering': ['-average_rating', '-total_consultations'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(max_length=200)),
                ('review_text', models.TextField()),
                ('expertise_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('punctuality_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('would_recommend', models.BooleanField(default=True)),
                ('improvement_suggestions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='experts.consultationrequest')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_reviews', to=settings.AUTH_USER_MODEL)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_reviews', to='experts.expertprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='consultationrequest',
            name='expert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_requests', to='experts.expertprofile'),
        ),
        migrations.CreateModel(
            name='ExpertBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(max_length=300)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('featured_image', models.ImageField(blank=True, upload_to='expert_blogs/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to='experts.expertprofile')),
                ('specializations', models.ManyToManyField(related_name='blog_posts', to='experts.expertspecialization')),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExpertAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('max_consultations', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to='experts.expertprofile')),
            ],
            options={
                'ordering': ['date', 'start_time'],
                'unique_together': {('expert', 'date', 'start_time')},
            },
        ),
    ]
